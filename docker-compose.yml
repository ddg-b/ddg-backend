version: '3.9'

networks:
  network_ddg:
      external: true
services:
  server:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    container_name: '${APP_NAME}-server'
    ports:
      - '${APP_PORT}:80'
    working_dir: /var/www/html
    environment:
      - 'DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASS}@db_server:3306/${MYSQL_DB}?serverVersion=10.5'
      #- 'PHP_IDE_CONFIG=serverName=xdebug_docker'
      #- 'XDEBUG_SESSION=1'
    volumes:
      - ./codebase:/var/www/html
      - ./docker/server/apache/sites-enabled:/etc/apache2/sites-enabled
      - ./docker/server/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
    depends_on:
      - cache
      - db_server
      - elasticsearch
    networks:
      - network_ddg

  db_server:
    image: mariadb:10.5.9
    container_name: '${APP_NAME}-db'
    restart: always
    ports:
      - '${DB_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASS}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASS}'
      MYSQL_DATABASE: '${MYSQL_DB}'
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    networks:
      - network_ddg

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - network_ddg
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.17.2
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch:9200
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      - network_ddg

  cache:
    image: redis:6.2-alpine
    container_name: '${APP_NAME}-redis'
    restart: always
    ports:
      - '6378:6379'
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - network_ddg
    volumes:
      - cache:/data

#  db_admin:
#    image: phpmyadmin/phpmyadmin:5
#    container_name: '${APP_NAME}-db-admin'
#    ports:
#      - '${APP_DB_ADMIN_PORT}:80'
#    environment:
#      PMA_HOST: db_server
#    depends_on:
#      db_server:
#        condition: service_healthy
#    volumes:
#      - db_admin_data:/var/www/html
#    networks:
#      - network_ddg
volumes:
  db_data:
  db_admin_data:
  cache:
